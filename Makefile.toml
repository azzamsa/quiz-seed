[config]
skip_core_tasks = true

# ---- BASIC ----

[tasks.serve]
description = "Start server"
install_crate = { crate_name = "trunk", binary = "trunk", test_arg = "-V" }
command = "trunk"
args = ["serve", "--open"]
dependencies = ["prepare"]

# ---- BUILD ----

[tasks.build]
description = "Build with trunk"
install_crate = { crate_name = "trunk", binary = "trunk", test_arg = "-V" }
command = "trunk"
args = ["build"]
dependencies = ["prepare"]

[tasks.prepare]
description = "Prepare asset"
install_crate = { crate_name = "trunk", binary = "trunk", test_arg = "-V" }
command = "npx"
args = ["postcss", "--config", "postcss.config.js", "css/styles.scss", "--output", "css/compiled.scss"]

# ---- LINT ----

[tasks.clippy]
description = "Lint with Clippy"
install_crate = { rustup_component_name = "clippy", binary = "cargo-clippy", test_arg = "--help" }
command = "cargo"
args = ["clippy", "--all-features", "--", "--deny", "warnings", "--deny", "clippy::pedantic", "--deny", "clippy::nursery"]

[tasks.fmt]
description = "Format with rustfmt"
install_crate = { rustup_component_name = "rustfmt", binary = "rustfmt", test_arg = "-V" }
command = "cargo"
args = ["fmt"]

[tasks.fmt_check]
extend = "fmt"
description = "Check format with nightly rustfmt"
args = ["fmt", "--all", "--", "--check"]


# ---- TEST ----

[tasks.test_h]
description = "Run headless tests. Ex: 'cargo make test_h firefox'. Test envs: [chrome, firefox, safari]"
extend = "test"
args = ["test", "--headless", "--${@}"]

[tasks.test]
description = "Run tests. Ex: 'cargo make test firefox'. Test envs: [chrome, firefox, safari]"
install_crate = { crate_name = "wasm-pack", binary = "wasm-pack", test_arg = "-V" }
command = "wasm-pack"
args = ["test", "--${@}"]
